{"version":3,"sources":["components/layout/Navbar.js","components/pages/Home.js","components/pages/Staff.js","components/auth/SignInWidget.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","id","Component","withAuth","_Component","Home","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","authenticated","checkAuthentication","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","props","auth","isAuthenticated","sent","setState","stop","login","_callee2","_context2","logout","_callee3","_context3","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","_componentDidUpdate","_callee5","_context5","mainContent","onClick","Staff","currentUserName","currentUserEmail","idToken","JSON","parse","localStorage","getItem","claims","email","name","_this$state","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","renderEl","onSuccess","onError","remove","Login","res","redirect","sessionToken","session","token","err","console","log","_checkAuthentication","Redirect","pathname","auth_SignInWidget","onAuthRequired","_ref","history","push","App","BrowserRouter","dist","issuer","client_id","redirect_uri","window","location","origin","layout_Navbar","Route","path","exact","component","render","auth_Login","ImplicitCallback","Boolean","hostname","match","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaa87a0f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Acme Staff Portal\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/staff\">\n                  Staff\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '@okta/okta-react';\n\nexport default withAuth(\n  class Home extends Component {\n    state = { authenticated: null };\n\n    checkAuthentication = async () => {\n      const authenticated = await this.props.auth.isAuthenticated();\n      if (authenticated !== this.state.authenticated) {\n        this.setState({ authenticated });\n      }\n    };\n\n    async componentDidMount() {\n      this.checkAuthentication();\n    }\n\n    async componentDidUpdate() {\n      this.checkAuthentication();\n    }\n\n    login = async () => {\n      this.props.auth.login('/');\n    };\n\n    logout = async () => {\n      this.props.auth.logout('/');\n    };\n\n    render() {\n      if (this.state.authenticated === null) return null;\n\n      const mainContent = this.state.authenticated ? (\n        <div>\n          <p className=\"lead\">\n            You have entered the staff portal,{' '}\n            <Link to=\"/staff\">click here</Link>\n          </p>\n          <button className=\"btn btn-light btn-lg\" onClick={this.logout}>\n            Logout\n          </button>\n        </div>\n      ) : (\n        <div>\n          <p className=\"lead\">\n            If you are a staff member, please get your credentials from your\n            supervisor\n          </p>\n          <button className=\"btn btn-dark btn-lg\" onClick={this.login}>\n            Login\n          </button>\n        </div>\n      );\n\n      return (\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Acme Staff Portal</h1>\n          {mainContent}\n        </div>\n      );\n    }\n  }\n);","import React, { Component } from 'react';\n\nclass Staff extends Component {\n  state = {\n    currentUserName: '',\n    currentUserEmail: ''\n  };\n\n  componentDidMount() {\n    const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\n    this.setState({\n      currentUserEmail: idToken.idToken.claims.email,\n      currentUserName: idToken.idToken.claims.name\n    });\n  }\n\n  render() {\n    const { currentUserEmail, currentUserName } = this.state;\n\n    return (\n      <div>\n        <h1>Welcome {currentUserName}</h1>\n        <p>Email: {currentUserEmail}</p>\n        <p>You have reached the authorized staff area of the portal</p>\n      </div>\n    );\n  }\n}\n\nexport default Staff;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\nimport '@okta/okta-signin-widget/dist/css/okta-theme.css';\n\nclass SignInWidget extends Component {\n  componentDidMount() {\n    const el = ReactDOM.findDOMNode(this);\n    this.widget = new OktaSignIn({\n      baseUrl: this.props.baseUrl,\n      logo: 'logo.png'\n    });\n    this.widget.renderEl({ el }, this.props.onSuccess, this.props.onError);\n  }\n\n  componentWillUnmount() {\n    this.widget.remove();\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nexport default SignInWidget;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport SignInWidget from './SignInWidget';\nimport { withAuth } from '@okta/okta-react';\n\nexport default withAuth(\n  class Login extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authenticated: null\n      };\n      this.checkAuthentication();\n    }\n\n    async checkAuthentication() {\n      const authenticated = await this.props.auth.isAuthenticated();\n      if (authenticated !== this.state.authenticated) {\n        this.setState({ authenticated });\n      }\n    }\n\n    componentDidUpdate() {\n      this.checkAuthentication();\n    }\n\n    onSuccess = res => {\n      return this.props.auth.redirect({\n        sessionToken: res.session.token\n      });\n    };\n\n    onError = err => {\n      console.log('error logging in', err);\n    };\n\n    render() {\n      if (this.state.authenticated === null) return null;\n      return this.state.authenticated ? (\n        <Redirect to={{ pathname: '/' }} />\n      ) : (\n        <SignInWidget\n          baseUrl={this.props.baseUrl}\n          onSuccess={this.onSuccess}\n          onError={this.onError}\n        />\n      );\n    }\n  }\n);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Security, SecureRoute, ImplicitCallback } from '@okta/okta-react';\n\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport Staff from './components/pages/Staff';\nimport Login from './components/auth/Login';\n\nimport './App.css';\n\nfunction onAuthRequired({ history }) {\n  history.push('/login');\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Security\n          issuer=\"https://dev-548302.oktapreview.com/oauth2/default\"\n          client_id=\"0oaiztb71jFNTPCej0h7\"\n          redirect_uri={window.location.origin + '/implicit/callback'}\n          onAuthRequired={onAuthRequired}\n        >\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"container\">\n              <Route path=\"/\" exact={true} component={Home} />\n              <SecureRoute path=\"/staff\" exact={true} component={Staff} />\n              <Route\n                path=\"/login\"\n                render={() => (\n                  <Login baseUrl=\"https://dev-548302.oktapreview.com\" />\n                )}\n              />\n              <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n            </div>\n          </div>\n        </Security>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}